DECLARE 
  TYPE veznevek IS TABLE OF VARCHAR2(50);
  TYPE kernevek IS TABLE OF VARCHAR2(50);
  TYPE posztSzovegek IS TABLE OF VARCHAR2(200);
  TYPE email IS TABLE OF VARCHAR2(100);
  TYPE csoportNev IS TABLE OF VARCHAR2(100);
  TYPE kepNev IS TABLE OF VARCHAR(100);
  v_veznev VARCHAR2(100);
  v_kernev VARCHAR2(100);
  v_felhasznalonev VARCHAR2(100);
  v_jelszo VARCHAR2(100);
  v_szulido DATE;
  v_email VARCHAR2(100);
  v_random_id NUMBER;
  v_email_vege VARCHAR2(20);
  
  v_poszt_date DATE;
  v_poszt_like NUMBER;
  v_poszt_szoveg VARCHAR2(150);
  
  v_csoport_id NUMBER;
  v_csoport_eleje VARCHAR2(100);
  v_csoport_hatulja VARCHAR2(100);
  v_csoport_leiras VARCHAR2(200);
  v_csoport_nev VARCHAR2(100);
  
  v_kep_nev VARCHAR(100);

  v_baratok_date DATE;
  v_baratok_userid NUMBER;
  
  v_kapcsolat_felhaszid NUMBER;
  v_kapcsolat_baratid NUMBER;
  
  
  kernev_list kernevek := kernevek('Anna','Emese', 'Mark', 'Daniel', 'Dominik','Krisztian', 'Rudi', 'Istvan', 'Arisz','Aron', 'Bence', 'Levente', 'Oliver', 'Marcell', 'Mate', 'Zalan', 'adam', 'Milan', 'David', 'Abigel', 'abraham', 'Erzsebet', 'Gabor', 'Jozsef', 'Matyas', 'Fanni', 'Aliz', 'Flora', 'Izabella', 'Maja', 'Lilla', 'Nora', 'Sara', 'Zsofia', 'Laura');
  veznev_list veznevek := veznevek('Nagy', 'Illes','Kele','Horompo', 'Kovacs', 'Rozsa', 'Szabo', 'Lakatos', 'Juhasz', 'Torok', 'Fekete', 'Kertesz', 'Meszaros', 'Takacs', 'Tarcali', 'Giljon', 'Feher', 'Varga', 'Toth', 'Balogh', 'Szilagyi', 'Racz', 'Papp', 'Olah', 'Nemeth', 'Kiss', 'Horvath');
  email_list email := email('@gmail.com','@freemail.hu', '@citromail.hu','@hotmail.hu','@inf.u-szeged.hu');
  poszt_szoveg_list posztSzovegek := posztSzovegek('I don’t believe people can change, look in this thread, just look at it… people never change…','We all said that 2019 was a bad year, we were saying the same thing about 2018, but things that happen in 2020 are just totally insane.','I look at the comments and half of them are pretty much off-topic. Guys stick to the subject, please!!!');
  csoport_nev_eleje_list csoportNev := csoportNev('white', 'admirable', 'spiteful', 'greasy', 'New York', 'newts', 'puppies', 'owls', 'marines', 'yellow', 'cream', 'witty', 'modest', 'twins');
  csoport_nev_hatulja_list csoportNev := csoportNev('white', 'admirable', 'spiteful', 'greasy', 'New York', 'newts', 'puppies', 'owls', 'marines', 'yellow', 'cream', 'witty', 'modest', 'twins');
  kepnev_list kepNev := kepNev('bear.png', 'cat.png', 'chicken.png', 'deer.png', 'dog.png', 'dog2.png', 'koala.png', 'panda.png', 'rabbit.png', 'deer2.png', 'fox.png', 'giraffe.png', 'koala.png', 'meerkat.png', 'puffer-fish.png', 'rabbit2.png', 'sea-lion.png', 'weasel.png', 'wolf.png');
  
  FUNCTION random_index(p_limit IN PLS_INTEGER) RETURN PLS_INTEGER
  IS
  BEGIN
    RETURN FLOOR(DBMS_RANDOM.VALUE(1, p_limit));
  END random_index;
  
  FUNCTION rnd_date(p_start_date IN DATE, p_end_date IN DATE) RETURN DATE
  IS
  BEGIN
    RETURN p_start_date + TRUNC(DBMS_RANDOM.VALUE(0, 1) * (p_end_date - p_start_date));
  END rnd_date;
  
 /* FUNCTION hash_password(password IN VARCHAR2) RETURN VARCHAR2
  IS
  BEGIN
  RETURN DBMS_CRYPTO.HASH(UTL_RAW.CAST_TO_RAW(UPPER(password)), DBMS_CRYPTO_HASH_SH1);
  END hash_password;*/
  
BEGIN
  FOR i IN 1..50 LOOP
  v_kernev := kernev_list(random_index(kernev_list.COUNT));
  v_veznev := veznev_list(random_index(veznev_list.COUNT));
  v_email_vege := email_list(random_index(email_list.COUNT));
  v_szulido := rnd_date(TO_DATE('1950-01-01','YYYY-MM_DD'), SYSDATE);
  v_felhasznalonev := CONCAT(v_veznev, TO_CHAR(v_szulido, 'DD'));
  v_email := CONCAT(v_felhasznalonev, v_email_vege);
  v_kep_nev := kepnev_list(random_index(kepnev_list.COUNT));
  
  /*v_jelszo := hash_password(CONCAT(SUBSTR(v_kernev,0,3), TO_CHAR(v_szulido, 'M')));*/
  
  INSERT INTO felhasznalo (felhasznalonev, jelszo, kernev, veznev, szulido, email, kep) VALUES(v_felhasznalonev, 123, v_kernev, v_veznev, v_szulido, v_email, v_kep_nev);
  COMMIT;
  END LOOP;
  
  FOR i IN 1..30 LOOP
    v_poszt_date := rnd_date(TO_DATE('2020-01-01', 'YYYY-MM_DD'), SYSDATE);
    v_poszt_like := round(DBMS_RANDOM.VALUE(1,150));
    v_poszt_szoveg := poszt_szoveg_list(random_index(poszt_szoveg_list.COUNT));
    
    INSERT INTO poszt (csoportposzt, szoveg, datum, likes, felhasznalo_id) VALUES (round(DBMS_RANDOM.VALUE(0,1)), v_poszt_szoveg, v_poszt_date, v_poszt_like, (SELECT id
    FROM (SELECT id FROM felhasznalo ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM = 1));
    COMMIT;
  END LOOP;
  
  FOR i IN 1..30 LOOP
    v_csoport_id :=  i;
    v_csoport_eleje := csoport_nev_eleje_list(random_index(csoport_nev_eleje_list.COUNT));
    v_csoport_hatulja := csoport_nev_hatulja_list(random_index(csoport_nev_hatulja_list.COUNT));
    v_csoport_leiras := poszt_szoveg_list(random_index(poszt_szoveg_list.COUNT));
    
    v_csoport_nev := CONCAT(v_csoport_eleje, v_csoport_hatulja);
    
    INSERT INTO csoport (csop_leiras, csop_nev) VALUES (v_csoport_leiras, v_csoport_nev);
    COMMIT;
  END LOOP;

  FOR i IN 1..12 LOOP
    v_baratok_date := rnd_date(TO_DATE('2020-01-01', 'YYYY-MM_DD'), SYSDATE);
    
    INSERT INTO baratok (datum, userid) VALUES (v_baratok_date , (SELECT id
    FROM (SELECT id FROM felhasznalo ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM = 1));
    COMMIT;
  END LOOP;

  FOR i IN 1..500 LOOP
    INSERT INTO kapcsolat (felhasznalo_id, baratok_userid) VALUES ((SELECT id FROM (SELECT id FROM felhasznalo ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM = 1), (SELECT id FROM (SELECT id FROM baratok ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM = 1));
    COMMIT;
  END LOOP;
  
  FOR i IN 1..30 LOOP
    INSERT INTO komment (poszt_id, felhasznalo_id) VALUES ((SELECT id FROM (SELECT id FROM poszt ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM = 1), (SELECT id FROM (SELECT id FROM felhasznalo ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM = 1));
    COMMIT;
  END LOOP;
  
  FOR i IN 1..30 LOOP
    INSERT INTO tartozik (felhasznalo_id, csoport_id) VALUES ((SELECT id FROM (SELECT id FROM felhasznalo ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM = 1), (SELECT id FROM (SELECT id FROM csoport ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM = 1));
    COMMIT;
  END LOOP;
END;
/